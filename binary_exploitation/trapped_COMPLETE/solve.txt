Challenge: Trapped
Category: Binary Exploitation
Author: Wittner

Description:

Well... I'm trapped. Feels like I'm in jail. Can you get the flag?

NOTE
The flag is in the root directory at /flag.txt

trapped 17.6 kB

Solve:

1. Not being strong with Binary Exploitation I relied on some help from our AI overlords.

The challenge calls:

	1. chroot(local_b8);
	2. but never calls chdir("/") afterward.

chroot() changes the process’ root directory (what absolute paths like /x are resolved against), but it does not change the current working directory (CWD). If the program’s CWD was still outside the jail when chroot() ran, your process now has:

	1. root = the jail (e.g. /tmp/jail-…)
	2. cwd = outside the jail (where the binary started)

Linux file descriptors and directory FDs are capability handles: if you hold a dir FD that points outside, you can keep using it even after chroot(). That’s why chroot alone is not a security boundary.

2. I reviewed and ran the AI generated "solve.py" and captured the flag against the live challenge interface.

┌──(ctf㉿kali)-[~/CTF/huntress2025/binary_exploitation/trapped]
└─$ python solve.py
[+] Opening connection to 10.0.30.196 on port 9999: Done
[+] Receiving all data: Done (150B)
[*] Closed connection to 10.0.30.196 port 9999
Creating jail at: /tmp/jail-Gu8bCj
Which file would you like to open?
What would you like me to run next? 
[*]
flag{5f8c037a7ca4cb89c80174bca5eaf531}

Flag: flag{5f8c037a7ca4cb89c80174bca5eaf531}