#!/usr/bin/env python3
import sys
from pathlib import Path

def find_all(data, pat):
    start = 0
    while True:
        i = data.find(pat, start)
        if i == -1:
            return
        yield i
        start = i + 1

def main():
    if len(sys.argv) < 2:
        print("Usage: extract-lua.py <file>")
        sys.exit(1)
    p = Path(sys.argv[1])
    data = p.read_bytes()
    sig = b'\x1bLua'
    offsets = list(find_all(data, sig))
    if not offsets:
        print("No '\\x1bLua' signatures found.")
        return
    for idx, off in enumerate(offsets):
        # end at next signature or EOF
        end = offsets[idx+1] if idx+1 < len(offsets) else len(data)
        chunk = data[off:end]
        out = p.parent / f"{p.stem}-chunk-{idx}.luac"
        out.write_bytes(chunk)
        print(f"Wrote {out} (offset {off} length {len(chunk)})")

if __name__ == "__main__":
    main()