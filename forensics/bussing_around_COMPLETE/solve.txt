Challenge: Bussing Around
Category: Forensics
Author: @Soups71

Description:

One of the engineers noticed that an HMI was going haywire.
He took a packet capture of some of the traffic but he can't make any sense of it... it just looks like gibberish!
For some reason, some of the traffic seems to be coming from someone's computer. Can you help us figure out what's going on?

bussing_around.pcapng 1.83 MB

Solve:

1. Download and analyze the pcap in Wireshark.
	
	a. There seems to be an excessive amount of "modbus/TCP" traffic which makes sense given the challenge description.

2. After reading up on how these controllers work, I found that there are specific unit identifiers

	a. Unit ID 3 might be the main PLC (like “Tank Controller”)
	b. Unit ID 6 might be another sub-module
	c. Unit ID 38 might be a remote I/O device or an intentionally planted “fake” device

3. I isolated the register values for Unit ID 38 with the following filter:

	a. modbus.func_code == 6 && modbus && mbtcp.unit_id == 38  && modbus.regval_uint16

4. Adding the "Register Value (UINT 16)" to my column list in Wireshark, we can see what might be a binary pattern (wireshark-1.png)

5. Extracting this data and pasting into Cyberchef, we can see our hypothesis was confirmed. [cyberchef-1.png]



	a. We can see a "PK" header which tells us this is probably an archive
	b. We see "flag.txt"
	c. We see "The password is 5939f3ec9d820f23df20948af09a5682"

6. Adding an "Unzip" function and the password into Cyberchef we can extract "flag.txt" and capture our flag.

Flag: flag{4d2a66c5ed8bb8cd4e4e1ab32c71f7a3}

